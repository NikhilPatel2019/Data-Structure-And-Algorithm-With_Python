# What is OOP?

### Definition

---

→ Object-oriented programming is a method of organizing a program by grouping related properties and behaviors into individual objects. The basic building blocks of OOP are **`objects`** and **`classes`**.

→ Object-oriented programming is a [programming paradigm](http://en.wikipedia.org/wiki/Programming_paradigm) that provides a means of structuring programs so that properties and behaviors are bundled into individual **objects**.

---

### Example

---

→ For instance, an object could represent a person with **properties** like a name, age, and address and **behaviors** such as walking, talking, breathing, and running. Or it could represent an [email](https://realpython.com/python-send-email/) with properties like a recipient list, subject, and body and behaviors like adding attachments and sending.

→ Put another way, object-oriented programming is an approach for modeling concrete, real-world things, like cars, as well as relations between things, like companies and employees, students and teachers, and so on. OOP models real-world entities as software objects that have some data associated with them and can perform certain functions.

→ Another common programming paradigm is **procedural programming**, which structures a program like a recipe in that it provides a set of steps, in the form of functions and code blocks, that flow sequentially in order to complete a task.

→ The key takeaway is that objects are at the center of object-oriented programming in Python, not only representing the data, as in procedural programming, but in the overall structure of the program as well.

---

## Reference Link

https://www.programiz.com/python-programming/object-oriented-programming 

https://towardsdatascience.com/object-oriented-programming-oop-in-python-56b1f3229c0f

---